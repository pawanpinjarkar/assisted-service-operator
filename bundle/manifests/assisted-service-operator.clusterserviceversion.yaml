apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    description: |-
      Assisted Service is used to orchestrate baremetal OpenShift installations.
  name: assisted-service-operator.v0.0.1
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - name: hosts.adi.io.my.domain
        version: v1alpha1
        kind: Host
      - name: clusters.adi.io.my.domain
        version: v1alpha1
        kind: Cluster
      - name: images.adi.io.my.domain
        version: v1alpha1
        kind: Image
  description: |-
    Assisted Service is used to orchestrate baremetal OpenShift installations.

    # Requirements

    Two PersistentVolumes, 10GB and 20GB in size, are required.
  displayName: Assisted Service Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      deployments:
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          app: postgres
        name: postgres
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: postgres
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                app: postgres
            spec:
              containers:
              - env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef: {key: db.name, name: assisted-installer-rds}
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef: {key: db.user, name: assisted-installer-rds}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef: {key: db.password, name: assisted-installer-rds}
                image: $LOCAL_REGISTRY/$LOCAL_REPOSITORY/postgresql-12-centos7
                imagePullPolicy: IfNotPresent
                name: postgres
                ports:
                - {containerPort: 5432}
                resources:
                  limits: {cpu: 200m, memory: 500Mi}
                  requests: {cpu: 100m, memory: 400Mi}
                volumeMounts:
                - {mountPath: /var/lib/postgress, name: postgredb}
              volumes:
              - name: postgredb
                persistentVolumeClaim: {claimName: postgres-pv-claim}
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          app: scality
        name: scality
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: scality
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                app: scality
            spec:
              containers:
              - env:
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: aws_secret_access_key
                      name: assisted-installer-s3
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: aws_access_key_id
                      name: assisted-installer-s3
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      key: aws_region
                      name: assisted-installer-s3
                - name: BUCKET
                  valueFrom:
                    secretKeyRef:
                      key: bucket
                      name: assisted-installer-s3
                - name: S3_ENDPOINT_URL
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: assisted-installer-s3
                - name: S3DATAPATH
                  valueFrom:
                    secretKeyRef:
                      key: s3_data_path
                      name: assisted-installer-s3
                - name: S3METADATAPATH
                  valueFrom:
                    secretKeyRef:
                      key: s3_metadata_path
                      name: assisted-installer-s3
                image: $LOCAL_REGISTRY/$LOCAL_REPOSITORY/s3server
                imagePullPolicy: Always
                name: s3server
                resources:
                  limits:
                    cpu: 500m
                    memory: 2000Mi
                  requests:
                    cpu: 300m
                    memory: 2000Mi
                volumeMounts:
                - mountPath: /mnt/data
                  name: scalityvol
              volumes:
              - name: scalityvol
                persistentVolumeClaim:
                  claimName: scality-pv-claim
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          app: ocp-metal-ui
        name: ocp-metal-ui
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: ocp-metal-ui
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                app: ocp-metal-ui
            spec:
              containers:
                - name: ocp-metal-ui
                  image: $LOCAL_REGISTRY/$LOCAL_REPOSITORY/ocp-metal-ui:latest
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 80
                  volumeMounts:
                    - mountPath: /opt/bitnami/nginx/conf/server_blocks/
                      readOnly: true
                      name: nginx-conf
              volumes:
                - name: nginx-conf
                  configMap:
                    name: ocp-metal-ui
                    items:
                      - key: nginx.conf
                        path: default.conf
              restartPolicy: Always
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          app: assisted-service
        name: assisted-service
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: assisted-service
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                app: assisted-service
            spec:
              containers:
              - name: assisted-service
                resources:
                  limits:
                    cpu: 500m
                    memory: 2000Mi
                  requests:
                    cpu: 300m
                    memory: 400Mi
                image: $LOCAL_REGISTRY/$LOCAL_REPOSITORY/assisted-service:latest
                imagePullPolicy: Always
                ports:
                  - containerPort: 8090
                livenessProbe:
                  httpGet:
                    path: /health
                    port: 8090
                  initialDelaySeconds: 30
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: 8090
                envFrom:
                  - configMapRef:
                      name: assisted-service-config
                env:
                  - name: DB_HOST
                    valueFrom:
                      secretKeyRef:
                        name: assisted-installer-rds
                        key: db.host
                  - name: DB_NAME
                    valueFrom:
                      secretKeyRef:
                        name: assisted-installer-rds
                        key: db.name
                  - name: DB_PASS
                    valueFrom:
                      secretKeyRef:
                        name: assisted-installer-rds
                        key: db.password
                  - name: DB_PORT
                    valueFrom:
                      secretKeyRef:
                        name: assisted-installer-rds
                        key: db.port
                  - name: DB_USER
                    valueFrom:
                      secretKeyRef:
                        name: assisted-installer-rds
                        key: db.user
                  - name: OCM_SERVICE_CLIENT_ID
                    valueFrom:
                      secretKeyRef:
                        key: ocm-service.clientId
                        name: assisted-installer-sso
                  - name: OCM_SERVICE_CLIENT_SECRET
                    valueFrom:
                      secretKeyRef:
                        key: ocm-service.clientSecret
                        name: assisted-installer-sso
                  - name: AWS_SECRET_ACCESS_KEY
                    valueFrom:
                      secretKeyRef:
                        key: aws_secret_access_key
                        name: assisted-installer-s3
                  - name: AWS_ACCESS_KEY_ID
                    valueFrom:
                      secretKeyRef:
                        key: aws_access_key_id
                        name: assisted-installer-s3
                  - name: S3_REGION
                    valueFrom:
                      secretKeyRef:
                        key: aws_region
                        name: assisted-installer-s3
                  - name: S3_BUCKET
                    valueFrom:
                      secretKeyRef:
                        key: bucket
                        name: assisted-installer-s3
                  - name: S3_ENDPOINT_URL
                    valueFrom:
                      secretKeyRef:
                        key: endpoint
                        name: assisted-installer-s3
                  - name: AWS_SECRET_ACCESS_KEY_PUBLIC
                    valueFrom:
                      secretKeyRef:
                        key: aws_secret_access_key
                        name: assisted-installer-public-s3
                  - name: AWS_ACCESS_KEY_ID_PUBLIC
                    valueFrom:
                      secretKeyRef:
                        key: aws_access_key_id
                        name: assisted-installer-public-s3
                  - name: S3_REGION_PUBLIC
                    valueFrom:
                      secretKeyRef:
                        key: aws_region
                        name: assisted-installer-public-s3
                  - name: S3_BUCKET_PUBLIC
                    valueFrom:
                      secretKeyRef:
                        key: bucket
                        name: assisted-installer-public-s3
                  - name: S3_ENDPOINT_URL_PUBLIC
                    valueFrom:
                      secretKeyRef:
                        key: endpoint
                        name: assisted-installer-public-s3
                  - name: S3_USE_SSL
                    value: "false"
                  - name: LOG_LEVEL
                    value: "info"
                  - name: LOG_FORMAT
                    value: "text"
                  - name: INSTALL_RH_CA
                    value: "false"
                  - name: REGISTRY_CREDS
                    value: ""
                  - name: DEPLOY_TARGET
                    value: "ocp"                    
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: AWS_SHARED_CREDENTIALS_FILE
                    value: /etc/.aws/credentials
              serviceAccountName: assisted-service-operator
      clusterPermissions:
      - serviceAccountName: assisted-service-operator
        rules:
        - verbs:
            - get
            - watch
            - list
          apiGroups:
            - ''
          resources:
            - nodes
            - pods
            - endpoints
            - services
            - secrets
        - verbs:
            - get
            - watch
            - list
            - delete
            - create
          apiGroups:
            - batch
          resources:
            - jobs
        - verbs:
            - create
            - get
            - list
            - watch
          apiGroups:
            - ''
          resources:
            - configmaps
        - verbs:
            - get
            - list
          apiGroups:
            - config.openshift.io
          resources:
            - clusterversions
        - verbs:
            - get
            - update
            - delete
          apiGroups:
            - ''
          resources:
            - configmaps
          resourceNames: ["assisted-service-leader-election-helper", "assisted-service-migration-helper", "assisted-service-baseiso-helper"]
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - assisted-service
  - OpenShift
  links:
  - name: Assisted Service
    url: https://github.com/openshift/assisted-service
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.0.1
